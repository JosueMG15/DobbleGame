//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DobbleGame.ServidorJosue {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CuentaUsuario", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class CuentaUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCuentaUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PuntajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Foto {
            get {
                return this.FotoField;
            }
            set {
                if ((object.ReferenceEquals(this.FotoField, value) != true)) {
                    this.FotoField = value;
                    this.RaisePropertyChanged("Foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCuentaUsuario {
            get {
                return this.IdCuentaUsuarioField;
            }
            set {
                if ((this.IdCuentaUsuarioField.Equals(value) != true)) {
                    this.IdCuentaUsuarioField = value;
                    this.RaisePropertyChanged("IdCuentaUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Puntaje {
            get {
                return this.PuntajeField;
            }
            set {
                if ((this.PuntajeField.Equals(value) != true)) {
                    this.PuntajeField = value;
                    this.RaisePropertyChanged("Puntaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorJosue.IGestionJugador")]
    public interface IGestionJugador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/RegistrarUsuario", ReplyAction="http://tempuri.org/IGestionJugador/RegistrarUsuarioResponse")]
        bool RegistrarUsuario(DobbleGame.ServidorJosue.CuentaUsuario cuentaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/RegistrarUsuario", ReplyAction="http://tempuri.org/IGestionJugador/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(DobbleGame.ServidorJosue.CuentaUsuario cuentaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ExisteNombreUsuarioResponse")]
        bool ExisteNombreUsuario(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ExisteNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteCorreoAsociado", ReplyAction="http://tempuri.org/IGestionJugador/ExisteCorreoAsociadoResponse")]
        bool ExisteCorreoAsociado(string correoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteCorreoAsociado", ReplyAction="http://tempuri.org/IGestionJugador/ExisteCorreoAsociadoResponse")]
        System.Threading.Tasks.Task<bool> ExisteCorreoAsociadoAsync(string correoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/IniciarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/IniciarSesionJugadorResponse")]
        DobbleGame.ServidorJosue.CuentaUsuario IniciarSesionJugador(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/IniciarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/IniciarSesionJugadorResponse")]
        System.Threading.Tasks.Task<DobbleGame.ServidorJosue.CuentaUsuario> IniciarSesionJugadorAsync(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarNombreUsuarioResponse")]
        bool ModificarNombreUsuario(int idCuenta, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarNombreUsuarioAsync(int idCuenta, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuarioResponse")]
        bool ModificarContraseñaUsuario(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarContraseñaUsuarioAsync(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarFotoUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarFotoUsuarioResponse")]
        bool ModificarFotoUsuario(int idCuenta, byte[] fotoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarFotoUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarFotoUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarFotoUsuarioAsync(int idCuenta, byte[] fotoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ValidarContraseña", ReplyAction="http://tempuri.org/IGestionJugador/ValidarContraseñaResponse")]
        bool ValidarContraseña(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ValidarContraseña", ReplyAction="http://tempuri.org/IGestionJugador/ValidarContraseñaResponse")]
        System.Threading.Tasks.Task<bool> ValidarContraseñaAsync(int idCuenta, string contraseñaUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionJugadorChannel : DobbleGame.ServidorJosue.IGestionJugador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionJugadorClient : System.ServiceModel.ClientBase<DobbleGame.ServidorJosue.IGestionJugador>, DobbleGame.ServidorJosue.IGestionJugador {
        
        public GestionJugadorClient() {
        }
        
        public GestionJugadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionJugadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionJugadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionJugadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegistrarUsuario(DobbleGame.ServidorJosue.CuentaUsuario cuentaUsuario) {
            return base.Channel.RegistrarUsuario(cuentaUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarUsuarioAsync(DobbleGame.ServidorJosue.CuentaUsuario cuentaUsuario) {
            return base.Channel.RegistrarUsuarioAsync(cuentaUsuario);
        }
        
        public bool ExisteNombreUsuario(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuario(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuarioAsync(nombreUsuario);
        }
        
        public bool ExisteCorreoAsociado(string correoUsuario) {
            return base.Channel.ExisteCorreoAsociado(correoUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteCorreoAsociadoAsync(string correoUsuario) {
            return base.Channel.ExisteCorreoAsociadoAsync(correoUsuario);
        }
        
        public DobbleGame.ServidorJosue.CuentaUsuario IniciarSesionJugador(string nombreUsuario, string contraseña) {
            return base.Channel.IniciarSesionJugador(nombreUsuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.ServidorJosue.CuentaUsuario> IniciarSesionJugadorAsync(string nombreUsuario, string contraseña) {
            return base.Channel.IniciarSesionJugadorAsync(nombreUsuario, contraseña);
        }
        
        public bool ModificarNombreUsuario(int idCuenta, string nombreUsuario) {
            return base.Channel.ModificarNombreUsuario(idCuenta, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarNombreUsuarioAsync(int idCuenta, string nombreUsuario) {
            return base.Channel.ModificarNombreUsuarioAsync(idCuenta, nombreUsuario);
        }
        
        public bool ModificarContraseñaUsuario(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ModificarContraseñaUsuario(idCuenta, contraseñaUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarContraseñaUsuarioAsync(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ModificarContraseñaUsuarioAsync(idCuenta, contraseñaUsuario);
        }
        
        public bool ModificarFotoUsuario(int idCuenta, byte[] fotoUsuario) {
            return base.Channel.ModificarFotoUsuario(idCuenta, fotoUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarFotoUsuarioAsync(int idCuenta, byte[] fotoUsuario) {
            return base.Channel.ModificarFotoUsuarioAsync(idCuenta, fotoUsuario);
        }
        
        public bool ValidarContraseña(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ValidarContraseña(idCuenta, contraseñaUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarContraseñaAsync(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ValidarContraseñaAsync(idCuenta, contraseñaUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorJosue.IGestionSala", CallbackContract=typeof(DobbleGame.ServidorJosue.IGestionSalaCallback))]
    public interface IGestionSala {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/CrearNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/CrearNuevaSalaResponse")]
        bool CrearNuevaSala(string nombreAnfitrion, string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/CrearNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/CrearNuevaSalaResponse")]
        System.Threading.Tasks.Task<bool> CrearNuevaSalaAsync(string nombreAnfitrion, string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/UnirseASala", ReplyAction="http://tempuri.org/IGestionSala/UnirseASalaResponse")]
        void UnirseASala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/UnirseASala", ReplyAction="http://tempuri.org/IGestionSala/UnirseASalaResponse")]
        System.Threading.Tasks.Task UnirseASalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/AbandonarSala")]
        void AbandonarSala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/AbandonarSala")]
        System.Threading.Tasks.Task AbandonarSalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeSala")]
        void EnviarMensajeSala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeSala")]
        System.Threading.Tasks.Task EnviarMensajeSalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSalaResponse")]
        string GenerarCodigoNuevaSala();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSalaResponse")]
        System.Threading.Tasks.Task<string> GenerarCodigoNuevaSalaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionSalaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/MostrarMensajeSala")]
        void MostrarMensajeSala(string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionSalaChannel : DobbleGame.ServidorJosue.IGestionSala, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionSalaClient : System.ServiceModel.DuplexClientBase<DobbleGame.ServidorJosue.IGestionSala>, DobbleGame.ServidorJosue.IGestionSala {
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool CrearNuevaSala(string nombreAnfitrion, string codigoSala) {
            return base.Channel.CrearNuevaSala(nombreAnfitrion, codigoSala);
        }
        
        public System.Threading.Tasks.Task<bool> CrearNuevaSalaAsync(string nombreAnfitrion, string codigoSala) {
            return base.Channel.CrearNuevaSalaAsync(nombreAnfitrion, codigoSala);
        }
        
        public void UnirseASala(string nombreUsuario, string codigoSala, string mensaje) {
            base.Channel.UnirseASala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task UnirseASalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.UnirseASalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public void AbandonarSala(string nombreUsuario, string codigoSala, string mensaje) {
            base.Channel.AbandonarSala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task AbandonarSalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.AbandonarSalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public void EnviarMensajeSala(string nombreUsuario, string codigoSala, string mensaje) {
            base.Channel.EnviarMensajeSala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeSalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.EnviarMensajeSalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public string GenerarCodigoNuevaSala() {
            return base.Channel.GenerarCodigoNuevaSala();
        }
        
        public System.Threading.Tasks.Task<string> GenerarCodigoNuevaSalaAsync() {
            return base.Channel.GenerarCodigoNuevaSalaAsync();
        }
    }
}
