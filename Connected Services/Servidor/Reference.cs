//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DobbleGame.Servidor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CuentaUsuario", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class CuentaUsuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsAnfitrionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCuentaUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PuntajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PuntosEnPartidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsAnfitrion {
            get {
                return this.EsAnfitrionField;
            }
            set {
                if ((this.EsAnfitrionField.Equals(value) != true)) {
                    this.EsAnfitrionField = value;
                    this.RaisePropertyChanged("EsAnfitrion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Foto {
            get {
                return this.FotoField;
            }
            set {
                if ((object.ReferenceEquals(this.FotoField, value) != true)) {
                    this.FotoField = value;
                    this.RaisePropertyChanged("Foto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCuentaUsuario {
            get {
                return this.IdCuentaUsuarioField;
            }
            set {
                if ((this.IdCuentaUsuarioField.Equals(value) != true)) {
                    this.IdCuentaUsuarioField = value;
                    this.RaisePropertyChanged("IdCuentaUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Puntaje {
            get {
                return this.PuntajeField;
            }
            set {
                if ((this.PuntajeField.Equals(value) != true)) {
                    this.PuntajeField = value;
                    this.RaisePropertyChanged("Puntaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PuntosEnPartida {
            get {
                return this.PuntosEnPartidaField;
            }
            set {
                if ((this.PuntosEnPartidaField.Equals(value) != true)) {
                    this.PuntosEnPartidaField = value;
                    this.RaisePropertyChanged("PuntosEnPartida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaServicioOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class RespuestaServicioOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorBDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExitosoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ErrorBD {
            get {
                return this.ErrorBDField;
            }
            set {
                if ((this.ErrorBDField.Equals(value) != true)) {
                    this.ErrorBDField = value;
                    this.RaisePropertyChanged("ErrorBD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exitoso {
            get {
                return this.ExitosoField;
            }
            set {
                if ((this.ExitosoField.Equals(value) != true)) {
                    this.ExitosoField = value;
                    this.RaisePropertyChanged("Exitoso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((this.ResultadoField.Equals(value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaServicioOfCuentaUsuario6jbaXeYD", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class RespuestaServicioOfCuentaUsuario6jbaXeYD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorBDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExitosoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DobbleGame.Servidor.CuentaUsuario ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ErrorBD {
            get {
                return this.ErrorBDField;
            }
            set {
                if ((this.ErrorBDField.Equals(value) != true)) {
                    this.ErrorBDField = value;
                    this.RaisePropertyChanged("ErrorBD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exitoso {
            get {
                return this.ExitosoField;
            }
            set {
                if ((this.ExitosoField.Equals(value) != true)) {
                    this.ExitosoField = value;
                    this.RaisePropertyChanged("Exitoso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DobbleGame.Servidor.CuentaUsuario Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultadoField, value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaServicioOfArrayOfAmistad6jbaXeYD", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class RespuestaServicioOfArrayOfAmistad6jbaXeYD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorBDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExitosoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DobbleGame.Servidor.Amistad[] ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ErrorBD {
            get {
                return this.ErrorBDField;
            }
            set {
                if ((this.ErrorBDField.Equals(value) != true)) {
                    this.ErrorBDField = value;
                    this.RaisePropertyChanged("ErrorBD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exitoso {
            get {
                return this.ExitosoField;
            }
            set {
                if ((this.ExitosoField.Equals(value) != true)) {
                    this.ExitosoField = value;
                    this.RaisePropertyChanged("Exitoso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DobbleGame.Servidor.Amistad[] Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultadoField, value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Amistad", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class Amistad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsuarioAmigoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsuarioPrincipalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool estadoSolicitudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAmistadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioAmigoId {
            get {
                return this.UsuarioAmigoIdField;
            }
            set {
                if ((this.UsuarioAmigoIdField.Equals(value) != true)) {
                    this.UsuarioAmigoIdField = value;
                    this.RaisePropertyChanged("UsuarioAmigoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UsuarioPrincipalId {
            get {
                return this.UsuarioPrincipalIdField;
            }
            set {
                if ((this.UsuarioPrincipalIdField.Equals(value) != true)) {
                    this.UsuarioPrincipalIdField = value;
                    this.RaisePropertyChanged("UsuarioPrincipalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool estadoSolicitud {
            get {
                return this.estadoSolicitudField;
            }
            set {
                if ((this.estadoSolicitudField.Equals(value) != true)) {
                    this.estadoSolicitudField = value;
                    this.RaisePropertyChanged("estadoSolicitud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAmistad {
            get {
                return this.idAmistadField;
            }
            set {
                if ((this.idAmistadField.Equals(value) != true)) {
                    this.idAmistadField = value;
                    this.RaisePropertyChanged("idAmistad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaServicioOfAmistad6jbaXeYD", Namespace="http://schemas.datacontract.org/2004/07/Logica")]
    [System.SerializableAttribute()]
    public partial class RespuestaServicioOfAmistad6jbaXeYD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorBDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExitosoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DobbleGame.Servidor.Amistad ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ErrorBD {
            get {
                return this.ErrorBDField;
            }
            set {
                if ((this.ErrorBDField.Equals(value) != true)) {
                    this.ErrorBDField = value;
                    this.RaisePropertyChanged("ErrorBD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exitoso {
            get {
                return this.ExitosoField;
            }
            set {
                if ((this.ExitosoField.Equals(value) != true)) {
                    this.ExitosoField = value;
                    this.RaisePropertyChanged("Exitoso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DobbleGame.Servidor.Amistad Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultadoField, value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servidor.IGestionJugador")]
    public interface IGestionJugador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/RegistrarUsuario", ReplyAction="http://tempuri.org/IGestionJugador/RegistrarUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean RegistrarUsuario(DobbleGame.Servidor.CuentaUsuario cuentaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/RegistrarUsuario", ReplyAction="http://tempuri.org/IGestionJugador/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> RegistrarUsuarioAsync(DobbleGame.Servidor.CuentaUsuario cuentaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ExisteNombreUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ExisteNombreUsuario(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ExisteNombreUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ExisteNombreUsuarioAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteCorreoAsociado", ReplyAction="http://tempuri.org/IGestionJugador/ExisteCorreoAsociadoResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ExisteCorreoAsociado(string correoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ExisteCorreoAsociado", ReplyAction="http://tempuri.org/IGestionJugador/ExisteCorreoAsociadoResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ExisteCorreoAsociadoAsync(string correoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/IniciarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/IniciarSesionJugadorResponse")]
        DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD IniciarSesionJugador(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/IniciarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/IniciarSesionJugadorResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD> IniciarSesionJugadorAsync(string nombreUsuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/CerrarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/CerrarSesionJugadorResponse")]
        void CerrarSesionJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/CerrarSesionJugador", ReplyAction="http://tempuri.org/IGestionJugador/CerrarSesionJugadorResponse")]
        System.Threading.Tasks.Task CerrarSesionJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarNombreUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ModificarNombreUsuario(int idCuenta, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarNombreUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarNombreUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarNombreUsuarioAsync(int idCuenta, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ModificarContraseñaUsuario(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarContraseñaUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarContraseñaUsuarioAsync(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarFotoUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarFotoUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ModificarFotoUsuario(int idCuenta, byte[] fotoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ModificarFotoUsuario", ReplyAction="http://tempuri.org/IGestionJugador/ModificarFotoUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarFotoUsuarioAsync(int idCuenta, byte[] fotoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ValidarContraseña", ReplyAction="http://tempuri.org/IGestionJugador/ValidarContraseñaResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean ValidarContraseña(int idCuenta, string contraseñaUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionJugador/ValidarContraseña", ReplyAction="http://tempuri.org/IGestionJugador/ValidarContraseñaResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ValidarContraseñaAsync(int idCuenta, string contraseñaUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionJugadorChannel : DobbleGame.Servidor.IGestionJugador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionJugadorClient : System.ServiceModel.ClientBase<DobbleGame.Servidor.IGestionJugador>, DobbleGame.Servidor.IGestionJugador {
        
        public GestionJugadorClient() {
        }
        
        public GestionJugadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionJugadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionJugadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionJugadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean RegistrarUsuario(DobbleGame.Servidor.CuentaUsuario cuentaUsuario) {
            return base.Channel.RegistrarUsuario(cuentaUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> RegistrarUsuarioAsync(DobbleGame.Servidor.CuentaUsuario cuentaUsuario) {
            return base.Channel.RegistrarUsuarioAsync(cuentaUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ExisteNombreUsuario(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuario(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ExisteNombreUsuarioAsync(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuarioAsync(nombreUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ExisteCorreoAsociado(string correoUsuario) {
            return base.Channel.ExisteCorreoAsociado(correoUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ExisteCorreoAsociadoAsync(string correoUsuario) {
            return base.Channel.ExisteCorreoAsociadoAsync(correoUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD IniciarSesionJugador(string nombreUsuario, string contraseña) {
            return base.Channel.IniciarSesionJugador(nombreUsuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD> IniciarSesionJugadorAsync(string nombreUsuario, string contraseña) {
            return base.Channel.IniciarSesionJugadorAsync(nombreUsuario, contraseña);
        }
        
        public void CerrarSesionJugador(string nombreUsuario) {
            base.Channel.CerrarSesionJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task CerrarSesionJugadorAsync(string nombreUsuario) {
            return base.Channel.CerrarSesionJugadorAsync(nombreUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ModificarNombreUsuario(int idCuenta, string nombreUsuario) {
            return base.Channel.ModificarNombreUsuario(idCuenta, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarNombreUsuarioAsync(int idCuenta, string nombreUsuario) {
            return base.Channel.ModificarNombreUsuarioAsync(idCuenta, nombreUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ModificarContraseñaUsuario(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ModificarContraseñaUsuario(idCuenta, contraseñaUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarContraseñaUsuarioAsync(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ModificarContraseñaUsuarioAsync(idCuenta, contraseñaUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ModificarFotoUsuario(int idCuenta, byte[] fotoUsuario) {
            return base.Channel.ModificarFotoUsuario(idCuenta, fotoUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ModificarFotoUsuarioAsync(int idCuenta, byte[] fotoUsuario) {
            return base.Channel.ModificarFotoUsuarioAsync(idCuenta, fotoUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean ValidarContraseña(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ValidarContraseña(idCuenta, contraseñaUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> ValidarContraseñaAsync(int idCuenta, string contraseñaUsuario) {
            return base.Channel.ValidarContraseñaAsync(idCuenta, contraseñaUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servidor.IGestionSala", CallbackContract=typeof(DobbleGame.Servidor.IGestionSalaCallback))]
    public interface IGestionSala {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/CrearNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/CrearNuevaSalaResponse")]
        bool CrearNuevaSala(string nombreUsuario, string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/CrearNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/CrearNuevaSalaResponse")]
        System.Threading.Tasks.Task<bool> CrearNuevaSalaAsync(string nombreUsuario, string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/UnirseASala", ReplyAction="http://tempuri.org/IGestionSala/UnirseASalaResponse")]
        bool UnirseASala(string nombreUsuario, string codigoSala, string mensaje, bool esAnfitrion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/UnirseASala", ReplyAction="http://tempuri.org/IGestionSala/UnirseASalaResponse")]
        System.Threading.Tasks.Task<bool> UnirseASalaAsync(string nombreUsuario, string codigoSala, string mensaje, bool esAnfitrion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/AbandonarSala", ReplyAction="http://tempuri.org/IGestionSala/AbandonarSalaResponse")]
        bool AbandonarSala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/AbandonarSala", ReplyAction="http://tempuri.org/IGestionSala/AbandonarSalaResponse")]
        System.Threading.Tasks.Task<bool> AbandonarSalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeSala")]
        void EnviarMensajeSala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeSala")]
        System.Threading.Tasks.Task EnviarMensajeSalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeConexionSala")]
        void EnviarMensajeConexionSala(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/EnviarMensajeConexionSala")]
        System.Threading.Tasks.Task EnviarMensajeConexionSalaAsync(string nombreUsuario, string codigoSala, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSalaResponse")]
        string GenerarCodigoNuevaSala();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSala", ReplyAction="http://tempuri.org/IGestionSala/GenerarCodigoNuevaSalaResponse")]
        System.Threading.Tasks.Task<string> GenerarCodigoNuevaSalaAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/NotificarUsuarioConectado")]
        void NotificarUsuarioConectado(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/NotificarUsuarioConectado")]
        System.Threading.Tasks.Task NotificarUsuarioConectadoAsync(string codigoSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionSalaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/MostrarMensajeSala")]
        void MostrarMensajeSala(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/ActualizarUsuariosConectados")]
        void ActualizarUsuariosConectados(DobbleGame.Servidor.CuentaUsuario[] usuariosConectados);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionSala/CambiarVentanaAPartida")]
        void CambiarVentanaAPartida();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionSalaChannel : DobbleGame.Servidor.IGestionSala, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionSalaClient : System.ServiceModel.DuplexClientBase<DobbleGame.Servidor.IGestionSala>, DobbleGame.Servidor.IGestionSala {
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSalaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool CrearNuevaSala(string nombreUsuario, string codigoSala) {
            return base.Channel.CrearNuevaSala(nombreUsuario, codigoSala);
        }
        
        public System.Threading.Tasks.Task<bool> CrearNuevaSalaAsync(string nombreUsuario, string codigoSala) {
            return base.Channel.CrearNuevaSalaAsync(nombreUsuario, codigoSala);
        }
        
        public bool UnirseASala(string nombreUsuario, string codigoSala, string mensaje, bool esAnfitrion) {
            return base.Channel.UnirseASala(nombreUsuario, codigoSala, mensaje, esAnfitrion);
        }
        
        public System.Threading.Tasks.Task<bool> UnirseASalaAsync(string nombreUsuario, string codigoSala, string mensaje, bool esAnfitrion) {
            return base.Channel.UnirseASalaAsync(nombreUsuario, codigoSala, mensaje, esAnfitrion);
        }
        
        public bool AbandonarSala(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.AbandonarSala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task<bool> AbandonarSalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.AbandonarSalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public void EnviarMensajeSala(string nombreUsuario, string codigoSala, string mensaje) {
            base.Channel.EnviarMensajeSala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeSalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.EnviarMensajeSalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public void EnviarMensajeConexionSala(string nombreUsuario, string codigoSala, string mensaje) {
            base.Channel.EnviarMensajeConexionSala(nombreUsuario, codigoSala, mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeConexionSalaAsync(string nombreUsuario, string codigoSala, string mensaje) {
            return base.Channel.EnviarMensajeConexionSalaAsync(nombreUsuario, codigoSala, mensaje);
        }
        
        public string GenerarCodigoNuevaSala() {
            return base.Channel.GenerarCodigoNuevaSala();
        }
        
        public System.Threading.Tasks.Task<string> GenerarCodigoNuevaSalaAsync() {
            return base.Channel.GenerarCodigoNuevaSalaAsync();
        }
        
        public void NotificarUsuarioConectado(string codigoSala) {
            base.Channel.NotificarUsuarioConectado(codigoSala);
        }
        
        public System.Threading.Tasks.Task NotificarUsuarioConectadoAsync(string codigoSala) {
            return base.Channel.NotificarUsuarioConectadoAsync(codigoSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servidor.IGestionPartida", CallbackContract=typeof(DobbleGame.Servidor.IGestionPartidaCallback))]
    public interface IGestionPartida {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/CrearNuevaPartida", ReplyAction="http://tempuri.org/IGestionPartida/CrearNuevaPartidaResponse")]
        bool CrearNuevaPartida(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/CrearNuevaPartida", ReplyAction="http://tempuri.org/IGestionPartida/CrearNuevaPartidaResponse")]
        System.Threading.Tasks.Task<bool> CrearNuevaPartidaAsync(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/UnirJugadoresAPartida", ReplyAction="http://tempuri.org/IGestionPartida/UnirJugadoresAPartidaResponse")]
        void UnirJugadoresAPartida(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/UnirJugadoresAPartida", ReplyAction="http://tempuri.org/IGestionPartida/UnirJugadoresAPartidaResponse")]
        System.Threading.Tasks.Task UnirJugadoresAPartidaAsync(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/AbandonarPartida", ReplyAction="http://tempuri.org/IGestionPartida/AbandonarPartidaResponse")]
        bool AbandonarPartida(string nombreUsuario, string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionPartida/AbandonarPartida", ReplyAction="http://tempuri.org/IGestionPartida/AbandonarPartidaResponse")]
        System.Threading.Tasks.Task<bool> AbandonarPartidaAsync(string nombreUsuario, string codigoSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionPartidaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestionPartida/ActualizarJugadoresEnPartida")]
        void ActualizarJugadoresEnPartida(DobbleGame.Servidor.CuentaUsuario[] jugadoresConectados);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionPartidaChannel : DobbleGame.Servidor.IGestionPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionPartidaClient : System.ServiceModel.DuplexClientBase<DobbleGame.Servidor.IGestionPartida>, DobbleGame.Servidor.IGestionPartida {
        
        public GestionPartidaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestionPartidaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool CrearNuevaPartida(string codigoSala) {
            return base.Channel.CrearNuevaPartida(codigoSala);
        }
        
        public System.Threading.Tasks.Task<bool> CrearNuevaPartidaAsync(string codigoSala) {
            return base.Channel.CrearNuevaPartidaAsync(codigoSala);
        }
        
        public void UnirJugadoresAPartida(string codigoSala) {
            base.Channel.UnirJugadoresAPartida(codigoSala);
        }
        
        public System.Threading.Tasks.Task UnirJugadoresAPartidaAsync(string codigoSala) {
            return base.Channel.UnirJugadoresAPartidaAsync(codigoSala);
        }
        
        public bool AbandonarPartida(string nombreUsuario, string codigoSala) {
            return base.Channel.AbandonarPartida(nombreUsuario, codigoSala);
        }
        
        public System.Threading.Tasks.Task<bool> AbandonarPartidaAsync(string nombreUsuario, string codigoSala) {
            return base.Channel.AbandonarPartidaAsync(nombreUsuario, codigoSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servidor.IGestionAmigos")]
    public interface IGestionAmigos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/EnviarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/EnviarSolicitudAmistadResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean EnviarSolicitudAmistad(int idUsuarioPrincipal, string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/EnviarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/EnviarSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> EnviarSolicitudAmistadAsync(int idUsuarioPrincipal, string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/AmistadYaExiste", ReplyAction="http://tempuri.org/IGestionAmigos/AmistadYaExisteResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean AmistadYaExiste(int idUsuarioPrincipal, string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/AmistadYaExiste", ReplyAction="http://tempuri.org/IGestionAmigos/AmistadYaExisteResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> AmistadYaExisteAsync(int idUsuarioPrincipal, string nombreUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerSolicitudesPendientes", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerSolicitudesPendientesResponse")]
        DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD ObtenerSolicitudesPendientes(int idUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerSolicitudesPendientes", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerSolicitudesPendientesResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD> ObtenerSolicitudesPendientesAsync(int idUsuarioAmigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerUsuario", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerUsuarioResponse")]
        DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD ObtenerUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerUsuario", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerUsuarioResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD> ObtenerUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/AceptarSolicitud", ReplyAction="http://tempuri.org/IGestionAmigos/AceptarSolicitudResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean AceptarSolicitud(int idAmistad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/AceptarSolicitud", ReplyAction="http://tempuri.org/IGestionAmigos/AceptarSolicitudResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> AceptarSolicitudAsync(int idAmistad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/EliminarAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/EliminarAmistadResponse")]
        DobbleGame.Servidor.RespuestaServicioOfboolean EliminarAmistad(int idAmistad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/EliminarAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/EliminarAmistadResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> EliminarAmistadAsync(int idAmistad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerAmistades", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerAmistadesResponse")]
        DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD ObtenerAmistades(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerAmistades", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerAmistadesResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD> ObtenerAmistadesAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerAmistadResponse")]
        DobbleGame.Servidor.RespuestaServicioOfAmistad6jbaXeYD ObtenerAmistad(int idAmistad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAmigos/ObtenerAmistad", ReplyAction="http://tempuri.org/IGestionAmigos/ObtenerAmistadResponse")]
        System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfAmistad6jbaXeYD> ObtenerAmistadAsync(int idAmistad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionAmigosChannel : DobbleGame.Servidor.IGestionAmigos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionAmigosClient : System.ServiceModel.ClientBase<DobbleGame.Servidor.IGestionAmigos>, DobbleGame.Servidor.IGestionAmigos {
        
        public GestionAmigosClient() {
        }
        
        public GestionAmigosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionAmigosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionAmigosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionAmigosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean EnviarSolicitudAmistad(int idUsuarioPrincipal, string nombreUsuarioAmigo) {
            return base.Channel.EnviarSolicitudAmistad(idUsuarioPrincipal, nombreUsuarioAmigo);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> EnviarSolicitudAmistadAsync(int idUsuarioPrincipal, string nombreUsuarioAmigo) {
            return base.Channel.EnviarSolicitudAmistadAsync(idUsuarioPrincipal, nombreUsuarioAmigo);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean AmistadYaExiste(int idUsuarioPrincipal, string nombreUsuarioAmigo) {
            return base.Channel.AmistadYaExiste(idUsuarioPrincipal, nombreUsuarioAmigo);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> AmistadYaExisteAsync(int idUsuarioPrincipal, string nombreUsuarioAmigo) {
            return base.Channel.AmistadYaExisteAsync(idUsuarioPrincipal, nombreUsuarioAmigo);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD ObtenerSolicitudesPendientes(int idUsuarioAmigo) {
            return base.Channel.ObtenerSolicitudesPendientes(idUsuarioAmigo);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD> ObtenerSolicitudesPendientesAsync(int idUsuarioAmigo) {
            return base.Channel.ObtenerSolicitudesPendientesAsync(idUsuarioAmigo);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD ObtenerUsuario(int idUsuario) {
            return base.Channel.ObtenerUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfCuentaUsuario6jbaXeYD> ObtenerUsuarioAsync(int idUsuario) {
            return base.Channel.ObtenerUsuarioAsync(idUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean AceptarSolicitud(int idAmistad) {
            return base.Channel.AceptarSolicitud(idAmistad);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> AceptarSolicitudAsync(int idAmistad) {
            return base.Channel.AceptarSolicitudAsync(idAmistad);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfboolean EliminarAmistad(int idAmistad) {
            return base.Channel.EliminarAmistad(idAmistad);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfboolean> EliminarAmistadAsync(int idAmistad) {
            return base.Channel.EliminarAmistadAsync(idAmistad);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD ObtenerAmistades(int idUsuario) {
            return base.Channel.ObtenerAmistades(idUsuario);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfArrayOfAmistad6jbaXeYD> ObtenerAmistadesAsync(int idUsuario) {
            return base.Channel.ObtenerAmistadesAsync(idUsuario);
        }
        
        public DobbleGame.Servidor.RespuestaServicioOfAmistad6jbaXeYD ObtenerAmistad(int idAmistad) {
            return base.Channel.ObtenerAmistad(idAmistad);
        }
        
        public System.Threading.Tasks.Task<DobbleGame.Servidor.RespuestaServicioOfAmistad6jbaXeYD> ObtenerAmistadAsync(int idAmistad) {
            return base.Channel.ObtenerAmistadAsync(idAmistad);
        }
    }
}
